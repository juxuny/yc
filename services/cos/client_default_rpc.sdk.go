// Code generated by yc@v0.0.1. DO NOT EDIT.
package cos

import (
	"context"
	"google.golang.org/grpc/metadata"
)

func Login(ctx context.Context, req *LoginRequest, extensionMetadata ...metadata.MD) (resp *LoginResponse, err error) {
	return DefaultClient.Login(ctx, req)
}
func SaveConfig(ctx context.Context, req *SaveConfigRequest, extensionMetadata ...metadata.MD) (resp *SaveConfigResponse, err error) {
	return DefaultClient.SaveConfig(ctx, req)
}
func DeleteConfig(ctx context.Context, req *DeleteConfigRequest, extensionMetadata ...metadata.MD) (resp *DeleteConfigResponse, err error) {
	return DefaultClient.DeleteConfig(ctx, req)
}
func ListConfig(ctx context.Context, req *ListConfigRequest, extensionMetadata ...metadata.MD) (resp *ListConfigResponse, err error) {
	return DefaultClient.ListConfig(ctx, req)
}
func CloneConfig(ctx context.Context, req *CloneConfigRequest, extensionMetadata ...metadata.MD) (resp *CloneConfigResponse, err error) {
	return DefaultClient.CloneConfig(ctx, req)
}
func UpdateStatusConfig(ctx context.Context, req *UpdateStatusConfigRequest, extensionMetadata ...metadata.MD) (resp *UpdateStatusConfigResponse, err error) {
	return DefaultClient.UpdateStatusConfig(ctx, req)
}
func Health(ctx context.Context, req *HealthRequest, extensionMetadata ...metadata.MD) (resp *HealthResponse, err error) {
	return DefaultClient.Health(ctx, req)
}
func SaveValue(ctx context.Context, req *SaveValueRequest, extensionMetadata ...metadata.MD) (resp *SaveValueResponse, err error) {
	return DefaultClient.SaveValue(ctx, req)
}
func DeleteValue(ctx context.Context, req *DeleteValueRequest, extensionMetadata ...metadata.MD) (resp *DeleteValueRequest, err error) {
	return DefaultClient.DeleteValue(ctx, req)
}
func ListValue(ctx context.Context, req *ListValueRequest, extensionMetadata ...metadata.MD) (resp *ListValueResponse, err error) {
	return DefaultClient.ListValue(ctx, req)
}
func DisableValue(ctx context.Context, req *DisableValueRequest, extensionMetadata ...metadata.MD) (resp *DisableValueResponse, err error) {
	return DefaultClient.DisableValue(ctx, req)
}
func ListAllValue(ctx context.Context, req *ListAllValueRequest, extensionMetadata ...metadata.MD) (resp *ListAllValueResponse, err error) {
	return DefaultClient.ListAllValue(ctx, req)
}
func UpdateStatusValue(ctx context.Context, req *UpdateStatusValueRequest, extensionMetadata ...metadata.MD) (resp *UpdateStatusValueResponse, err error) {
	return DefaultClient.UpdateStatusValue(ctx, req)
}
func ListAllValueByConfigId(ctx context.Context, req *ListAllValueByConfigIdRequest, extensionMetadata ...metadata.MD) (resp *ListAllValueByConfigIdResponse, err error) {
	return DefaultClient.ListAllValueByConfigId(ctx, req)
}
func SaveNamespace(ctx context.Context, req *SaveNamespaceRequest, extensionMetadata ...metadata.MD) (resp *SaveNamespaceResponse, err error) {
	return DefaultClient.SaveNamespace(ctx, req)
}
func ListNamespace(ctx context.Context, req *ListNamespaceRequest, extensionMetadata ...metadata.MD) (resp *ListNamespaceResponse, err error) {
	return DefaultClient.ListNamespace(ctx, req)
}
func DeleteNamespace(ctx context.Context, req *DeleteNamespaceRequest, extensionMetadata ...metadata.MD) (resp *DeleteNamespaceResponse, err error) {
	return DefaultClient.DeleteNamespace(ctx, req)
}
func UpdateStatusNamespace(ctx context.Context, req *UpdateStatusNamespaceRequest, extensionMetadata ...metadata.MD) (resp *UpdateStatusNamespaceResponse, err error) {
	return DefaultClient.UpdateStatusNamespace(ctx, req)
}
func SelectorNamespace(ctx context.Context, req *SelectorRequest, extensionMetadata ...metadata.MD) (resp *SelectorResponse, err error) {
	return DefaultClient.SelectorNamespace(ctx, req)
}
func UserInfo(ctx context.Context, req *UserInfoRequest, extensionMetadata ...metadata.MD) (resp *UserInfoResponse, err error) {
	return DefaultClient.UserInfo(ctx, req)
}
func UpdateInfo(ctx context.Context, req *UpdateInfoRequest, extensionMetadata ...metadata.MD) (resp *UpdateInfoResponse, err error) {
	return DefaultClient.UpdateInfo(ctx, req)
}
func ModifyPassword(ctx context.Context, req *ModifyPasswordRequest, extensionMetadata ...metadata.MD) (resp *ModifyPasswordResponse, err error) {
	return DefaultClient.ModifyPassword(ctx, req)
}
func SaveOrCreateUser(ctx context.Context, req *SaveOrCreateUserRequest, extensionMetadata ...metadata.MD) (resp *SaveOrCreateUserResponse, err error) {
	return DefaultClient.SaveOrCreateUser(ctx, req)
}
func UserList(ctx context.Context, req *UserListRequest, extensionMetadata ...metadata.MD) (resp *UserListResponse, err error) {
	return DefaultClient.UserList(ctx, req)
}
func UserUpdateStatus(ctx context.Context, req *UserUpdateStatusRequest, extensionMetadata ...metadata.MD) (resp *UserUpdateStatusResponse, err error) {
	return DefaultClient.UserUpdateStatus(ctx, req)
}
func UserDelete(ctx context.Context, req *UserDeleteRequest, extensionMetadata ...metadata.MD) (resp *UserDeleteResponse, err error) {
	return DefaultClient.UserDelete(ctx, req)
}
func AccessKeyList(ctx context.Context, req *AccessKeyListRequest, extensionMetadata ...metadata.MD) (resp *AccessKeyListResponse, err error) {
	return DefaultClient.AccessKeyList(ctx, req)
}
func CreateAccessKey(ctx context.Context, req *CreateAccessKeyRequest, extensionMetadata ...metadata.MD) (resp *CreateAccessKeyResponse, err error) {
	return DefaultClient.CreateAccessKey(ctx, req)
}
func UpdateStatusAccessKey(ctx context.Context, req *UpdateStatusAccessKeyRequest, extensionMetadata ...metadata.MD) (resp *UpdateStatusAccessKeyResponse, err error) {
	return DefaultClient.UpdateStatusAccessKey(ctx, req)
}
func DeleteAccessKey(ctx context.Context, req *DeleteAccessKeyRequest, extensionMetadata ...metadata.MD) (resp *DeleteAccessKeyResponse, err error) {
	return DefaultClient.DeleteAccessKey(ctx, req)
}
func SetRemarkAccessKey(ctx context.Context, req *SetAccessKeyRemarkRequest, extensionMetadata ...metadata.MD) (resp *SetAccessKeyRemarkResponse, err error) {
	return DefaultClient.SetRemarkAccessKey(ctx, req)
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: cos.proto

package cos

import (
	dt "github.com/juxuny/yc/dt"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModifyPasswordType int32

const (
	ModifyPasswordType_Unknown ModifyPasswordType = 0
	// 通过旧密码修改
	ModifyPasswordType_OldPassword ModifyPasswordType = 1
	// 通过临时token修改
	ModifyPasswordType_Token ModifyPasswordType = 2
)

// Enum value maps for ModifyPasswordType.
var (
	ModifyPasswordType_name = map[int32]string{
		0: "Unknown",
		1: "OldPassword",
		2: "Token",
	}
	ModifyPasswordType_value = map[string]int32{
		"Unknown":     0,
		"OldPassword": 1,
		"Token":       2,
	}
)

func (x ModifyPasswordType) Enum() *ModifyPasswordType {
	p := new(ModifyPasswordType)
	*p = x
	return p
}

func (x ModifyPasswordType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModifyPasswordType) Descriptor() protoreflect.EnumDescriptor {
	return file_cos_proto_enumTypes[0].Descriptor()
}

func (ModifyPasswordType) Type() protoreflect.EnumType {
	return &file_cos_proto_enumTypes[0]
}

func (x ModifyPasswordType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModifyPasswordType.Descriptor instead.
func (ModifyPasswordType) EnumDescriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{0}
}

type AccountType int32

const (
	AccountType_AccountTypeUnknown  AccountType = 0
	AccountType_AccountTypePassword AccountType = 1
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "AccountTypeUnknown",
		1: "AccountTypePassword",
	}
	AccountType_value = map[string]int32{
		"AccountTypeUnknown":  0,
		"AccountTypePassword": 1,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_cos_proto_enumTypes[1].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_cos_proto_enumTypes[1]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{1}
}

type ConfigRecordType int32

const (
	ConfigRecordType_ConfigRecordTypeUnknown ConfigRecordType = 0
	ConfigRecordType_ConfigRecordTypeCreate  ConfigRecordType = 1
	ConfigRecordType_ConfigRecordTypeModify  ConfigRecordType = 2
	ConfigRecordType_ConfigRecordTypeDelete  ConfigRecordType = 3
	ConfigRecordType_ConfigRecordTypeLink    ConfigRecordType = 4
	ConfigRecordType_ConfigRecordTypeUnlink  ConfigRecordType = 5
)

// Enum value maps for ConfigRecordType.
var (
	ConfigRecordType_name = map[int32]string{
		0: "ConfigRecordTypeUnknown",
		1: "ConfigRecordTypeCreate",
		2: "ConfigRecordTypeModify",
		3: "ConfigRecordTypeDelete",
		4: "ConfigRecordTypeLink",
		5: "ConfigRecordTypeUnlink",
	}
	ConfigRecordType_value = map[string]int32{
		"ConfigRecordTypeUnknown": 0,
		"ConfigRecordTypeCreate":  1,
		"ConfigRecordTypeModify":  2,
		"ConfigRecordTypeDelete":  3,
		"ConfigRecordTypeLink":    4,
		"ConfigRecordTypeUnlink":  5,
	}
)

func (x ConfigRecordType) Enum() *ConfigRecordType {
	p := new(ConfigRecordType)
	*p = x
	return p
}

func (x ConfigRecordType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigRecordType) Descriptor() protoreflect.EnumDescriptor {
	return file_cos_proto_enumTypes[2].Descriptor()
}

func (ConfigRecordType) Type() protoreflect.EnumType {
	return &file_cos_proto_enumTypes[2]
}

func (x ConfigRecordType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigRecordType.Descriptor instead.
func (ConfigRecordType) EnumDescriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{2}
}

type ValueType int32

const (
	ValueType_ValueTypeUnknown ValueType = 0
	ValueType_ValueTypeInt     ValueType = 1
	ValueType_ValueTypeFloat64 ValueType = 2
	ValueType_ValueTypeBool    ValueType = 3
	ValueType_ValueTypeString  ValueType = 4
)

// Enum value maps for ValueType.
var (
	ValueType_name = map[int32]string{
		0: "ValueTypeUnknown",
		1: "ValueTypeInt",
		2: "ValueTypeFloat64",
		3: "ValueTypeBool",
		4: "ValueTypeString",
	}
	ValueType_value = map[string]int32{
		"ValueTypeUnknown": 0,
		"ValueTypeInt":     1,
		"ValueTypeFloat64": 2,
		"ValueTypeBool":    3,
		"ValueTypeString":  4,
	}
)

func (x ValueType) Enum() *ValueType {
	p := new(ValueType)
	*p = x
	return p
}

func (x ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_cos_proto_enumTypes[3].Descriptor()
}

func (ValueType) Type() protoreflect.EnumType {
	return &file_cos_proto_enumTypes[3]
}

func (x ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueType.Descriptor instead.
func (ValueType) EnumDescriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{3}
}

type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{0}
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime string `protobuf:"bytes,1,opt,name=currentTime,proto3" json:"currentTime,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{1}
}

func (x *HealthResponse) GetCurrentTime() string {
	if x != nil {
		return x.CurrentTime
	}
	return ""
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// @v: in= 1
	// @msg: 无效登录类型: {{.AccountType|num}}
	AccountType AccountType `protobuf:"varint,3,opt,name=accountType,proto3,enum=cos.AccountType" json:"accountType,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginRequest) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_AccountTypeUnknown
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Token  string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{3}
}

func (x *LoginResponse) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LoginResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *dt.ID `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserInfoRequest) Reset() {
	*x = UserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRequest) ProtoMessage() {}

func (x *UserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRequest.ProtoReflect.Descriptor instead.
func (*UserInfoRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{4}
}

func (x *UserInfoRequest) GetUserId() *dt.ID {
	if x != nil {
		return x.UserId
	}
	return nil
}

type UserInfoSimple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *dt.ID      `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UserName    string      `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	AccountType AccountType `protobuf:"varint,4,opt,name=accountType,proto3,enum=cos.AccountType" json:"accountType,omitempty"`
}

func (x *UserInfoSimple) Reset() {
	*x = UserInfoSimple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoSimple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoSimple) ProtoMessage() {}

func (x *UserInfoSimple) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoSimple.ProtoReflect.Descriptor instead.
func (*UserInfoSimple) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{5}
}

func (x *UserInfoSimple) GetUserId() *dt.ID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *UserInfoSimple) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfoSimple) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfoSimple) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_AccountTypeUnknown
}

// @ref: ModelAccount
type UserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *dt.ID      `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Nick        string      `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	Identifier  string      `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
	AccountType AccountType `protobuf:"varint,4,opt,name=accountType,proto3,enum=cos.AccountType" json:"accountType,omitempty"`
}

func (x *UserInfoResponse) Reset() {
	*x = UserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoResponse) ProtoMessage() {}

func (x *UserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoResponse.ProtoReflect.Descriptor instead.
func (*UserInfoResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{6}
}

func (x *UserInfoResponse) GetUserId() *dt.ID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *UserInfoResponse) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *UserInfoResponse) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *UserInfoResponse) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_AccountTypeUnknown
}

type UpdateInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *dt.ID `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// @v: length.min=1
	// @msg: missing nick name
	Nick string `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
}

func (x *UpdateInfoRequest) Reset() {
	*x = UpdateInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInfoRequest) ProtoMessage() {}

func (x *UpdateInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateInfoRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateInfoRequest) GetUserId() *dt.ID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *UpdateInfoRequest) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

type UpdateInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateInfoResponse) Reset() {
	*x = UpdateInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInfoResponse) ProtoMessage() {}

func (x *UpdateInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateInfoResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{8}
}

type ModifyPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *dt.ID `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// @v: length.min=6
	// @v: length.max=22
	// @v: password=up|low|num
	// @msg: invalid old password: {{.OldPassword}}
	OldPassword string `protobuf:"bytes,3,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`
	// @v: length.min=6
	// @v: length.max=22
	// @v: password=up|low|num
	// @msg: invalid new password: {{.NewPassword}}
	NewPassword string `protobuf:"bytes,4,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
}

func (x *ModifyPasswordRequest) Reset() {
	*x = ModifyPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPasswordRequest) ProtoMessage() {}

func (x *ModifyPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPasswordRequest.ProtoReflect.Descriptor instead.
func (*ModifyPasswordRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{9}
}

func (x *ModifyPasswordRequest) GetUserId() *dt.ID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *ModifyPasswordRequest) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *ModifyPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type ModifyPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyPasswordResponse) Reset() {
	*x = ModifyPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPasswordResponse) ProtoMessage() {}

func (x *ModifyPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPasswordResponse.ProtoReflect.Descriptor instead.
func (*ModifyPasswordResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{10}
}

type ModelAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @index
	Id *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @index
	Identifier string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Credential string `protobuf:"bytes,3,opt,name=credential,proto3" json:"credential,omitempty"`
	// @index
	AccountType AccountType `protobuf:"varint,4,opt,name=accountType,proto3,enum=cos.AccountType" json:"accountType,omitempty"`
	CreateTime  int64       `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  int64       `protobuf:"varint,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	DeletedAt   int64       `protobuf:"varint,7,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	IsDisabled  bool        `protobuf:"varint,8,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
	// @index
	CreatorId *dt.ID `protobuf:"bytes,9,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	Nick      string `protobuf:"bytes,10,opt,name=nick,proto3" json:"nick,omitempty"`
}

func (x *ModelAccount) Reset() {
	*x = ModelAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelAccount) ProtoMessage() {}

func (x *ModelAccount) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelAccount.ProtoReflect.Descriptor instead.
func (*ModelAccount) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{11}
}

func (x *ModelAccount) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ModelAccount) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ModelAccount) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

func (x *ModelAccount) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_AccountTypeUnknown
}

func (x *ModelAccount) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ModelAccount) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *ModelAccount) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelAccount) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

func (x *ModelAccount) GetCreatorId() *dt.ID {
	if x != nil {
		return x.CreatorId
	}
	return nil
}

func (x *ModelAccount) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

type ModelNamespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @index
	Id *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @index
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CreateTime int64  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,4,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	DeletedAt  int64  `protobuf:"varint,5,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	IsDisabled bool   `protobuf:"varint,6,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
	// @index
	CreatorId *dt.ID `protobuf:"bytes,7,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
}

func (x *ModelNamespace) Reset() {
	*x = ModelNamespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelNamespace) ProtoMessage() {}

func (x *ModelNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelNamespace.ProtoReflect.Descriptor instead.
func (*ModelNamespace) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{12}
}

func (x *ModelNamespace) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ModelNamespace) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ModelNamespace) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ModelNamespace) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *ModelNamespace) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelNamespace) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

func (x *ModelNamespace) GetCreatorId() *dt.ID {
	if x != nil {
		return x.CreatorId
	}
	return nil
}

// @ref: ModelNamespace
type NamespaceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CreateTime int64  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,4,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	IsDisabled bool   `protobuf:"varint,6,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
	CreatorId  *dt.ID `protobuf:"bytes,7,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
}

func (x *NamespaceResp) Reset() {
	*x = NamespaceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceResp) ProtoMessage() {}

func (x *NamespaceResp) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceResp.ProtoReflect.Descriptor instead.
func (*NamespaceResp) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{13}
}

func (x *NamespaceResp) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *NamespaceResp) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NamespaceResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *NamespaceResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *NamespaceResp) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

func (x *NamespaceResp) GetCreatorId() *dt.ID {
	if x != nil {
		return x.CreatorId
	}
	return nil
}

type ModelConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @index
	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime int64  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	DeletedAt  int64  `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @index
	ConfigId   string `protobuf:"bytes,5,opt,name=configId,proto3" json:"configId,omitempty"`
	IsDisabled bool   `protobuf:"varint,6,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
	// @index
	CreatorId *dt.ID `protobuf:"bytes,7,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	// @index
	BaseId *dt.ID `protobuf:"bytes,8,opt,name=baseId,proto3" json:"baseId,omitempty"`
	// @index
	NamespaceId    *dt.ID           `protobuf:"bytes,9,opt,name=namespaceId,proto3" json:"namespaceId,omitempty"`
	LastSeqNo      uint64           `protobuf:"varint,10,opt,name=lastSeqNo,proto3" json:"lastSeqNo,omitempty"`
	LastRecordType ConfigRecordType `protobuf:"varint,11,opt,name=lastRecordType,proto3,enum=cos.ConfigRecordType" json:"lastRecordType,omitempty"`
	LinkCount      uint64           `protobuf:"varint,12,opt,name=linkCount,proto3" json:"linkCount,omitempty"`
}

func (x *ModelConfig) Reset() {
	*x = ModelConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelConfig) ProtoMessage() {}

func (x *ModelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelConfig.ProtoReflect.Descriptor instead.
func (*ModelConfig) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{14}
}

func (x *ModelConfig) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ModelConfig) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ModelConfig) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *ModelConfig) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelConfig) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *ModelConfig) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

func (x *ModelConfig) GetCreatorId() *dt.ID {
	if x != nil {
		return x.CreatorId
	}
	return nil
}

func (x *ModelConfig) GetBaseId() *dt.ID {
	if x != nil {
		return x.BaseId
	}
	return nil
}

func (x *ModelConfig) GetNamespaceId() *dt.ID {
	if x != nil {
		return x.NamespaceId
	}
	return nil
}

func (x *ModelConfig) GetLastSeqNo() uint64 {
	if x != nil {
		return x.LastSeqNo
	}
	return 0
}

func (x *ModelConfig) GetLastRecordType() ConfigRecordType {
	if x != nil {
		return x.LastRecordType
	}
	return ConfigRecordType_ConfigRecordTypeUnknown
}

func (x *ModelConfig) GetLinkCount() uint64 {
	if x != nil {
		return x.LinkCount
	}
	return 0
}

type ModelConfigRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @index
	Id *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @index
	ConfigId   *dt.ID `protobuf:"bytes,2,opt,name=configId,proto3" json:"configId,omitempty"`
	CreateTime int64  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	SeqNo      uint64 `protobuf:"varint,5,opt,name=seqNo,proto3" json:"seqNo,omitempty"`
	// @index
	// @orm: type
	RecordType ConfigRecordType `protobuf:"varint,6,opt,name=recordType,proto3,enum=cos.ConfigRecordType" json:"recordType,omitempty"`
}

func (x *ModelConfigRecord) Reset() {
	*x = ModelConfigRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelConfigRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelConfigRecord) ProtoMessage() {}

func (x *ModelConfigRecord) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelConfigRecord.ProtoReflect.Descriptor instead.
func (*ModelConfigRecord) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{15}
}

func (x *ModelConfigRecord) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ModelConfigRecord) GetConfigId() *dt.ID {
	if x != nil {
		return x.ConfigId
	}
	return nil
}

func (x *ModelConfigRecord) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ModelConfigRecord) GetSeqNo() uint64 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

func (x *ModelConfigRecord) GetRecordType() ConfigRecordType {
	if x != nil {
		return x.RecordType
	}
	return ConfigRecordType_ConfigRecordTypeUnknown
}

type ConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime int64  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	DeletedAt  int64  `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	ConfigId   string `protobuf:"bytes,5,opt,name=configId,proto3" json:"configId,omitempty"`
	IsDisabled bool   `protobuf:"varint,6,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
	CreatorId  *dt.ID `protobuf:"bytes,7,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	BaseId     *dt.ID `protobuf:"bytes,8,opt,name=baseId,proto3" json:"baseId,omitempty"`
}

func (x *ConfigResp) Reset() {
	*x = ConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResp) ProtoMessage() {}

func (x *ConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResp.ProtoReflect.Descriptor instead.
func (*ConfigResp) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{16}
}

func (x *ConfigResp) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ConfigResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ConfigResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *ConfigResp) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ConfigResp) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *ConfigResp) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

func (x *ConfigResp) GetCreatorId() *dt.ID {
	if x != nil {
		return x.CreatorId
	}
	return nil
}

func (x *ConfigResp) GetBaseId() *dt.ID {
	if x != nil {
		return x.BaseId
	}
	return nil
}

type ModelKeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @index
	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime int64  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	DeletedAt  int64  `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	IsDisabled bool   `protobuf:"varint,5,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
	// @index
	ConfigKey   string    `protobuf:"bytes,6,opt,name=configKey,proto3" json:"configKey,omitempty"`
	ConfigValue string    `protobuf:"bytes,7,opt,name=configValue,proto3" json:"configValue,omitempty"`
	ValueType   ValueType `protobuf:"varint,8,opt,name=valueType,proto3,enum=cos.ValueType" json:"valueType,omitempty"`
	// @index
	ConfigId *dt.ID `protobuf:"bytes,9,opt,name=configId,proto3" json:"configId,omitempty"`
	// @index
	CreatorId *dt.ID `protobuf:"bytes,10,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	// @index
	IsHot bool `protobuf:"varint,11,opt,name=isHot,proto3" json:"isHot,omitempty"`
	// @index
	SeqNo uint64 `protobuf:"varint,12,opt,name=seqNo,proto3" json:"seqNo,omitempty"`
}

func (x *ModelKeyValue) Reset() {
	*x = ModelKeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelKeyValue) ProtoMessage() {}

func (x *ModelKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelKeyValue.ProtoReflect.Descriptor instead.
func (*ModelKeyValue) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{17}
}

func (x *ModelKeyValue) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ModelKeyValue) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ModelKeyValue) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *ModelKeyValue) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelKeyValue) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

func (x *ModelKeyValue) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *ModelKeyValue) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *ModelKeyValue) GetValueType() ValueType {
	if x != nil {
		return x.ValueType
	}
	return ValueType_ValueTypeUnknown
}

func (x *ModelKeyValue) GetConfigId() *dt.ID {
	if x != nil {
		return x.ConfigId
	}
	return nil
}

func (x *ModelKeyValue) GetCreatorId() *dt.ID {
	if x != nil {
		return x.CreatorId
	}
	return nil
}

func (x *ModelKeyValue) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *ModelKeyValue) GetSeqNo() uint64 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

// @ref: ModelKeyValue
type KeyValueResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *dt.ID    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime  int64     `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  int64     `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	DeletedAt   int64     `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	IsDisabled  bool      `protobuf:"varint,5,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
	ConfigKey   string    `protobuf:"bytes,6,opt,name=configKey,proto3" json:"configKey,omitempty"`
	ConfigValue string    `protobuf:"bytes,7,opt,name=configValue,proto3" json:"configValue,omitempty"`
	ValueType   ValueType `protobuf:"varint,8,opt,name=valueType,proto3,enum=cos.ValueType" json:"valueType,omitempty"`
	ConfigId    *dt.ID    `protobuf:"bytes,9,opt,name=configId,proto3" json:"configId,omitempty"`
	CreatorId   *dt.ID    `protobuf:"bytes,10,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	IsHot       bool      `protobuf:"varint,11,opt,name=isHot,proto3" json:"isHot,omitempty"`
}

func (x *KeyValueResp) Reset() {
	*x = KeyValueResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValueResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueResp) ProtoMessage() {}

func (x *KeyValueResp) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueResp.ProtoReflect.Descriptor instead.
func (*KeyValueResp) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{18}
}

func (x *KeyValueResp) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *KeyValueResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *KeyValueResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *KeyValueResp) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *KeyValueResp) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

func (x *KeyValueResp) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *KeyValueResp) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *KeyValueResp) GetValueType() ValueType {
	if x != nil {
		return x.ValueType
	}
	return ValueType_ValueTypeUnknown
}

func (x *KeyValueResp) GetConfigId() *dt.ID {
	if x != nil {
		return x.ConfigId
	}
	return nil
}

func (x *KeyValueResp) GetCreatorId() *dt.ID {
	if x != nil {
		return x.CreatorId
	}
	return nil
}

func (x *KeyValueResp) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

type SaveOrCreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Credential string `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	// @v: in=1
	// @msg: invalid accountType: {{.AccountType|num}}
	AccountType AccountType `protobuf:"varint,3,opt,name=accountType,proto3,enum=cos.AccountType" json:"accountType,omitempty"`
	UserId      *dt.ID      `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	// @v: length.min=1
	// @v: length.max=16
	Nick string `protobuf:"bytes,5,opt,name=nick,proto3" json:"nick,omitempty"`
}

func (x *SaveOrCreateUserRequest) Reset() {
	*x = SaveOrCreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveOrCreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveOrCreateUserRequest) ProtoMessage() {}

func (x *SaveOrCreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveOrCreateUserRequest.ProtoReflect.Descriptor instead.
func (*SaveOrCreateUserRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{19}
}

func (x *SaveOrCreateUserRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *SaveOrCreateUserRequest) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

func (x *SaveOrCreateUserRequest) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_AccountTypeUnknown
}

func (x *SaveOrCreateUserRequest) GetUserId() *dt.ID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *SaveOrCreateUserRequest) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

type SaveOrCreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *dt.ID `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	IsNew  bool   `protobuf:"varint,2,opt,name=isNew,proto3" json:"isNew,omitempty"`
}

func (x *SaveOrCreateUserResponse) Reset() {
	*x = SaveOrCreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveOrCreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveOrCreateUserResponse) ProtoMessage() {}

func (x *SaveOrCreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveOrCreateUserResponse.ProtoReflect.Descriptor instead.
func (*SaveOrCreateUserResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{20}
}

func (x *SaveOrCreateUserResponse) GetUserId() *dt.ID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *SaveOrCreateUserResponse) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

// @ref: ModelAccount
type UserListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *dt.ID      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Identifier  string      `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	AccountType AccountType `protobuf:"varint,3,opt,name=accountType,proto3,enum=cos.AccountType" json:"accountType,omitempty"`
	Nick        string      `protobuf:"bytes,4,opt,name=nick,proto3" json:"nick,omitempty"`
	CreateTime  int64       `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  int64       `protobuf:"varint,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	IsDisabled  bool        `protobuf:"varint,7,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *UserListItem) Reset() {
	*x = UserListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListItem) ProtoMessage() {}

func (x *UserListItem) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListItem.ProtoReflect.Descriptor instead.
func (*UserListItem) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{21}
}

func (x *UserListItem) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UserListItem) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *UserListItem) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_AccountTypeUnknown
}

func (x *UserListItem) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *UserListItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *UserListItem) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *UserListItem) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

type UserListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @v: required
	Pagination *dt.Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	SearchKey  string         `protobuf:"bytes,2,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	IsDisabled *dt.NullBool   `protobuf:"bytes,3,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *UserListRequest) Reset() {
	*x = UserListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListRequest) ProtoMessage() {}

func (x *UserListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListRequest.ProtoReflect.Descriptor instead.
func (*UserListRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{22}
}

func (x *UserListRequest) GetPagination() *dt.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *UserListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *UserListRequest) GetIsDisabled() *dt.NullBool {
	if x != nil {
		return x.IsDisabled
	}
	return nil
}

type UserListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *dt.PaginationResp `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	List       []*UserListItem    `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserListResponse) Reset() {
	*x = UserListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListResponse) ProtoMessage() {}

func (x *UserListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListResponse.ProtoReflect.Descriptor instead.
func (*UserListResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{23}
}

func (x *UserListResponse) GetPagination() *dt.PaginationResp {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *UserListResponse) GetList() []*UserListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type SaveNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @v: length.min=3
	// @msg: invalid namespace: {{.Namespace}}
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Id        *dt.ID `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SaveNamespaceRequest) Reset() {
	*x = SaveNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveNamespaceRequest) ProtoMessage() {}

func (x *SaveNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveNamespaceRequest.ProtoReflect.Descriptor instead.
func (*SaveNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{24}
}

func (x *SaveNamespaceRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SaveNamespaceRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

type SaveNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveNamespaceResponse) Reset() {
	*x = SaveNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveNamespaceResponse) ProtoMessage() {}

func (x *SaveNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveNamespaceResponse.ProtoReflect.Descriptor instead.
func (*SaveNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{25}
}

type ListNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *dt.Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	SearchKey  string         `protobuf:"bytes,2,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	IsDisabled *dt.NullBool   `protobuf:"bytes,3,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *ListNamespaceRequest) Reset() {
	*x = ListNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceRequest) ProtoMessage() {}

func (x *ListNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceRequest.ProtoReflect.Descriptor instead.
func (*ListNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{26}
}

func (x *ListNamespaceRequest) GetPagination() *dt.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListNamespaceRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *ListNamespaceRequest) GetIsDisabled() *dt.NullBool {
	if x != nil {
		return x.IsDisabled
	}
	return nil
}

// @ref: ModelNamespace
type ListNamespaceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CreateTime int64  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,4,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	IsDisabled bool   `protobuf:"varint,5,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *ListNamespaceItem) Reset() {
	*x = ListNamespaceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceItem) ProtoMessage() {}

func (x *ListNamespaceItem) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceItem.ProtoReflect.Descriptor instead.
func (*ListNamespaceItem) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{27}
}

func (x *ListNamespaceItem) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListNamespaceItem) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListNamespaceItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ListNamespaceItem) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *ListNamespaceItem) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

type ListNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *dt.PaginationResp   `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	List       []*ListNamespaceItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListNamespaceResponse) Reset() {
	*x = ListNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceResponse) ProtoMessage() {}

func (x *ListNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceResponse.ProtoReflect.Descriptor instead.
func (*ListNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{28}
}

func (x *ListNamespaceResponse) GetPagination() *dt.PaginationResp {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListNamespaceResponse) GetList() []*ListNamespaceItem {
	if x != nil {
		return x.List
	}
	return nil
}

type DeleteNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @v: min=1
	// @msg: invalid id
	Id *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteNamespaceRequest) Reset() {
	*x = DeleteNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceRequest) ProtoMessage() {}

func (x *DeleteNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteNamespaceRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNamespaceResponse) Reset() {
	*x = DeleteNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceResponse) ProtoMessage() {}

func (x *DeleteNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceResponse.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{30}
}

type SaveConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NamespaceId *dt.ID `protobuf:"bytes,2,opt,name=namespaceId,proto3" json:"namespaceId,omitempty"`
	// @v: required
	ConfigId string `protobuf:"bytes,3,opt,name=configId,proto3" json:"configId,omitempty"`
	BaseId   *dt.ID `protobuf:"bytes,4,opt,name=baseId,proto3" json:"baseId,omitempty"`
}

func (x *SaveConfigRequest) Reset() {
	*x = SaveConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveConfigRequest) ProtoMessage() {}

func (x *SaveConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveConfigRequest.ProtoReflect.Descriptor instead.
func (*SaveConfigRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{31}
}

func (x *SaveConfigRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SaveConfigRequest) GetNamespaceId() *dt.ID {
	if x != nil {
		return x.NamespaceId
	}
	return nil
}

func (x *SaveConfigRequest) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *SaveConfigRequest) GetBaseId() *dt.ID {
	if x != nil {
		return x.BaseId
	}
	return nil
}

type SaveConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveConfigResponse) Reset() {
	*x = SaveConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveConfigResponse) ProtoMessage() {}

func (x *SaveConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveConfigResponse.ProtoReflect.Descriptor instead.
func (*SaveConfigResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{32}
}

type DeleteConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteConfigRequest) Reset() {
	*x = DeleteConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigRequest) ProtoMessage() {}

func (x *DeleteConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteConfigRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteConfigRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteConfigResponse) Reset() {
	*x = DeleteConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigResponse) ProtoMessage() {}

func (x *DeleteConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigResponse.ProtoReflect.Descriptor instead.
func (*DeleteConfigResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{34}
}

type ListConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *dt.Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// @v: required
	NamespaceId *dt.ID       `protobuf:"bytes,2,opt,name=namespaceId,proto3" json:"namespaceId,omitempty"`
	SearchKey   string       `protobuf:"bytes,3,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	IsDisabled  *dt.NullBool `protobuf:"bytes,4,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *ListConfigRequest) Reset() {
	*x = ListConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigRequest) ProtoMessage() {}

func (x *ListConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigRequest.ProtoReflect.Descriptor instead.
func (*ListConfigRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{35}
}

func (x *ListConfigRequest) GetPagination() *dt.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListConfigRequest) GetNamespaceId() *dt.ID {
	if x != nil {
		return x.NamespaceId
	}
	return nil
}

func (x *ListConfigRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *ListConfigRequest) GetIsDisabled() *dt.NullBool {
	if x != nil {
		return x.IsDisabled
	}
	return nil
}

// @ref: ModelConfig
type ListConfigItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime  int64  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  int64  `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	BaseId      *dt.ID `protobuf:"bytes,4,opt,name=baseId,proto3" json:"baseId,omitempty"`
	NamespaceId *dt.ID `protobuf:"bytes,5,opt,name=namespaceId,proto3" json:"namespaceId,omitempty"`
	ConfigId    string `protobuf:"bytes,6,opt,name=configId,proto3" json:"configId,omitempty"`
	LinkCount   uint64 `protobuf:"varint,7,opt,name=linkCount,proto3" json:"linkCount,omitempty"`
	IsDisabled  bool   `protobuf:"varint,8,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *ListConfigItem) Reset() {
	*x = ListConfigItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigItem) ProtoMessage() {}

func (x *ListConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigItem.ProtoReflect.Descriptor instead.
func (*ListConfigItem) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{36}
}

func (x *ListConfigItem) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListConfigItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ListConfigItem) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *ListConfigItem) GetBaseId() *dt.ID {
	if x != nil {
		return x.BaseId
	}
	return nil
}

func (x *ListConfigItem) GetNamespaceId() *dt.ID {
	if x != nil {
		return x.NamespaceId
	}
	return nil
}

func (x *ListConfigItem) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *ListConfigItem) GetLinkCount() uint64 {
	if x != nil {
		return x.LinkCount
	}
	return 0
}

func (x *ListConfigItem) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

type ListConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *dt.PaginationResp `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	List       []*ListConfigItem  `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListConfigResponse) Reset() {
	*x = ListConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigResponse) ProtoMessage() {}

func (x *ListConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigResponse.ProtoReflect.Descriptor instead.
func (*ListConfigResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{37}
}

func (x *ListConfigResponse) GetPagination() *dt.PaginationResp {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListConfigResponse) GetList() []*ListConfigItem {
	if x != nil {
		return x.List
	}
	return nil
}

type CloneConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @v: required
	Id *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @v: length.min=1
	// @msg: invalid configId: {{.NewConfigId}}
	NewConfigId string `protobuf:"bytes,2,opt,name=newConfigId,proto3" json:"newConfigId,omitempty"`
}

func (x *CloneConfigRequest) Reset() {
	*x = CloneConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneConfigRequest) ProtoMessage() {}

func (x *CloneConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneConfigRequest.ProtoReflect.Descriptor instead.
func (*CloneConfigRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{38}
}

func (x *CloneConfigRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CloneConfigRequest) GetNewConfigId() string {
	if x != nil {
		return x.NewConfigId
	}
	return ""
}

type CloneConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloneConfigResponse) Reset() {
	*x = CloneConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneConfigResponse) ProtoMessage() {}

func (x *CloneConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneConfigResponse.ProtoReflect.Descriptor instead.
func (*CloneConfigResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{39}
}

type SaveValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId *dt.ID `protobuf:"bytes,1,opt,name=configId,proto3" json:"configId,omitempty"`
	// @v: required
	ConfigKey string `protobuf:"bytes,2,opt,name=configKey,proto3" json:"configKey,omitempty"`
	// @v: required
	ConfigValue string    `protobuf:"bytes,3,opt,name=configValue,proto3" json:"configValue,omitempty"`
	IsHot       bool      `protobuf:"varint,4,opt,name=isHot,proto3" json:"isHot,omitempty"`
	ValueType   ValueType `protobuf:"varint,5,opt,name=valueType,proto3,enum=cos.ValueType" json:"valueType,omitempty"`
}

func (x *SaveValueRequest) Reset() {
	*x = SaveValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveValueRequest) ProtoMessage() {}

func (x *SaveValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveValueRequest.ProtoReflect.Descriptor instead.
func (*SaveValueRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{40}
}

func (x *SaveValueRequest) GetConfigId() *dt.ID {
	if x != nil {
		return x.ConfigId
	}
	return nil
}

func (x *SaveValueRequest) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *SaveValueRequest) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *SaveValueRequest) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *SaveValueRequest) GetValueType() ValueType {
	if x != nil {
		return x.ValueType
	}
	return ValueType_ValueTypeUnknown
}

type SaveValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveValueResponse) Reset() {
	*x = SaveValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveValueResponse) ProtoMessage() {}

func (x *SaveValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveValueResponse.ProtoReflect.Descriptor instead.
func (*SaveValueResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{41}
}

type ListValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *dt.Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	ConfigId   *dt.ID         `protobuf:"bytes,2,opt,name=configId,proto3" json:"configId,omitempty"`
	SearchKey  string         `protobuf:"bytes,3,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	IsDisabled *dt.NullBool   `protobuf:"bytes,4,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *ListValueRequest) Reset() {
	*x = ListValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListValueRequest) ProtoMessage() {}

func (x *ListValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListValueRequest.ProtoReflect.Descriptor instead.
func (*ListValueRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{42}
}

func (x *ListValueRequest) GetPagination() *dt.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListValueRequest) GetConfigId() *dt.ID {
	if x != nil {
		return x.ConfigId
	}
	return nil
}

func (x *ListValueRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *ListValueRequest) GetIsDisabled() *dt.NullBool {
	if x != nil {
		return x.IsDisabled
	}
	return nil
}

type ListValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *dt.PaginationResp `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	List       []*KeyValueResp    `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListValueResponse) Reset() {
	*x = ListValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListValueResponse) ProtoMessage() {}

func (x *ListValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListValueResponse.ProtoReflect.Descriptor instead.
func (*ListValueResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{43}
}

func (x *ListValueResponse) GetPagination() *dt.PaginationResp {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListValueResponse) GetList() []*KeyValueResp {
	if x != nil {
		return x.List
	}
	return nil
}

type DeleteValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @v: length.min=1
	// @msg: missing config key name
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteValueRequest) Reset() {
	*x = DeleteValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteValueRequest) ProtoMessage() {}

func (x *DeleteValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteValueRequest.ProtoReflect.Descriptor instead.
func (*DeleteValueRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{44}
}

func (x *DeleteValueRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DeleteValueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DeleteValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteValueResponse) Reset() {
	*x = DeleteValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteValueResponse) ProtoMessage() {}

func (x *DeleteValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteValueResponse.ProtoReflect.Descriptor instead.
func (*DeleteValueResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{45}
}

type DisableValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsDisabled bool   `protobuf:"varint,2,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *DisableValueRequest) Reset() {
	*x = DisableValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableValueRequest) ProtoMessage() {}

func (x *DisableValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableValueRequest.ProtoReflect.Descriptor instead.
func (*DisableValueRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{46}
}

func (x *DisableValueRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DisableValueRequest) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

type DisableValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableValueResponse) Reset() {
	*x = DisableValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableValueResponse) ProtoMessage() {}

func (x *DisableValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableValueResponse.ProtoReflect.Descriptor instead.
func (*DisableValueResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{47}
}

type UpdateStatusValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @v: required
	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsDisabled bool   `protobuf:"varint,2,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *UpdateStatusValueRequest) Reset() {
	*x = UpdateStatusValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusValueRequest) ProtoMessage() {}

func (x *UpdateStatusValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusValueRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusValueRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateStatusValueRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateStatusValueRequest) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

type UpdateStatusValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStatusValueResponse) Reset() {
	*x = UpdateStatusValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusValueResponse) ProtoMessage() {}

func (x *UpdateStatusValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusValueResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatusValueResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{49}
}

type ListAllValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId   *dt.ID       `protobuf:"bytes,1,opt,name=configId,proto3" json:"configId,omitempty"`
	IsDisabled *dt.NullBool `protobuf:"bytes,2,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
	IsHot      *dt.NullBool `protobuf:"bytes,3,opt,name=isHot,proto3" json:"isHot,omitempty"`
	SearchKey  string       `protobuf:"bytes,4,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
}

func (x *ListAllValueRequest) Reset() {
	*x = ListAllValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllValueRequest) ProtoMessage() {}

func (x *ListAllValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllValueRequest.ProtoReflect.Descriptor instead.
func (*ListAllValueRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{50}
}

func (x *ListAllValueRequest) GetConfigId() *dt.ID {
	if x != nil {
		return x.ConfigId
	}
	return nil
}

func (x *ListAllValueRequest) GetIsDisabled() *dt.NullBool {
	if x != nil {
		return x.IsDisabled
	}
	return nil
}

func (x *ListAllValueRequest) GetIsHot() *dt.NullBool {
	if x != nil {
		return x.IsHot
	}
	return nil
}

func (x *ListAllValueRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type ListAllValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*KeyValueResp `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListAllValueResponse) Reset() {
	*x = ListAllValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllValueResponse) ProtoMessage() {}

func (x *ListAllValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllValueResponse.ProtoReflect.Descriptor instead.
func (*ListAllValueResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{51}
}

func (x *ListAllValueResponse) GetList() []*KeyValueResp {
	if x != nil {
		return x.List
	}
	return nil
}

type UserUpdateStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @v: required
	UserId     *dt.ID `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	IsDisabled bool   `protobuf:"varint,2,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *UserUpdateStatusRequest) Reset() {
	*x = UserUpdateStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateStatusRequest) ProtoMessage() {}

func (x *UserUpdateStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateStatusRequest.ProtoReflect.Descriptor instead.
func (*UserUpdateStatusRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{52}
}

func (x *UserUpdateStatusRequest) GetUserId() *dt.ID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *UserUpdateStatusRequest) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

type UserUpdateStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserUpdateStatusResponse) Reset() {
	*x = UserUpdateStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateStatusResponse) ProtoMessage() {}

func (x *UserUpdateStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateStatusResponse.ProtoReflect.Descriptor instead.
func (*UserUpdateStatusResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{53}
}

type UserDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @v: required
	UserId *dt.ID `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserDeleteRequest) Reset() {
	*x = UserDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleteRequest) ProtoMessage() {}

func (x *UserDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleteRequest.ProtoReflect.Descriptor instead.
func (*UserDeleteRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{54}
}

func (x *UserDeleteRequest) GetUserId() *dt.ID {
	if x != nil {
		return x.UserId
	}
	return nil
}

type UserDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserDeleteResponse) Reset() {
	*x = UserDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleteResponse) ProtoMessage() {}

func (x *UserDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleteResponse.ProtoReflect.Descriptor instead.
func (*UserDeleteResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{55}
}

type UpdateStatusNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @v: required
	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsDisabled bool   `protobuf:"varint,2,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *UpdateStatusNamespaceRequest) Reset() {
	*x = UpdateStatusNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusNamespaceRequest) ProtoMessage() {}

func (x *UpdateStatusNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusNamespaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateStatusNamespaceRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateStatusNamespaceRequest) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

type UpdateStatusNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStatusNamespaceResponse) Reset() {
	*x = UpdateStatusNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusNamespaceResponse) ProtoMessage() {}

func (x *UpdateStatusNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusNamespaceResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatusNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{57}
}

type UpdateStatusConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @v: required
	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsDisabled bool   `protobuf:"varint,2,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *UpdateStatusConfigRequest) Reset() {
	*x = UpdateStatusConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusConfigRequest) ProtoMessage() {}

func (x *UpdateStatusConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusConfigRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateStatusConfigRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateStatusConfigRequest) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

type UpdateStatusConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStatusConfigResponse) Reset() {
	*x = UpdateStatusConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusConfigResponse) ProtoMessage() {}

func (x *UpdateStatusConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatusConfigResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{59}
}

type SelectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDisabled *dt.NullBool `protobuf:"bytes,1,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *SelectorRequest) Reset() {
	*x = SelectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectorRequest) ProtoMessage() {}

func (x *SelectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectorRequest.ProtoReflect.Descriptor instead.
func (*SelectorRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{60}
}

func (x *SelectorRequest) GetIsDisabled() *dt.NullBool {
	if x != nil {
		return x.IsDisabled
	}
	return nil
}

type SelectorItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SelectorItem) Reset() {
	*x = SelectorItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectorItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectorItem) ProtoMessage() {}

func (x *SelectorItem) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectorItem.ProtoReflect.Descriptor instead.
func (*SelectorItem) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{61}
}

func (x *SelectorItem) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *SelectorItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SelectorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SelectorItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SelectorResponse) Reset() {
	*x = SelectorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectorResponse) ProtoMessage() {}

func (x *SelectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectorResponse.ProtoReflect.Descriptor instead.
func (*SelectorResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{62}
}

func (x *SelectorResponse) GetList() []*SelectorItem {
	if x != nil {
		return x.List
	}
	return nil
}

type ModelAccessKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @index
	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime int64  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	IsDisabled bool   `protobuf:"varint,4,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
	DeletedAt  int64  `protobuf:"varint,5,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @index
	UserId *dt.ID `protobuf:"bytes,6,opt,name=userId,proto3" json:"userId,omitempty"`
	// @index
	AccessKey      string `protobuf:"bytes,7,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	HasValidity    bool   `protobuf:"varint,8,opt,name=hasValidity,proto3" json:"hasValidity,omitempty"`
	ValidStartTime int64  `protobuf:"varint,9,opt,name=validStartTime,proto3" json:"validStartTime,omitempty"`
	ValidEndTime   int64  `protobuf:"varint,10,opt,name=validEndTime,proto3" json:"validEndTime,omitempty"`
	Remark         string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
	Secret         string `protobuf:"bytes,12,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *ModelAccessKey) Reset() {
	*x = ModelAccessKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelAccessKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelAccessKey) ProtoMessage() {}

func (x *ModelAccessKey) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelAccessKey.ProtoReflect.Descriptor instead.
func (*ModelAccessKey) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{63}
}

func (x *ModelAccessKey) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ModelAccessKey) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ModelAccessKey) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *ModelAccessKey) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

func (x *ModelAccessKey) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelAccessKey) GetUserId() *dt.ID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *ModelAccessKey) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *ModelAccessKey) GetHasValidity() bool {
	if x != nil {
		return x.HasValidity
	}
	return false
}

func (x *ModelAccessKey) GetValidStartTime() int64 {
	if x != nil {
		return x.ValidStartTime
	}
	return 0
}

func (x *ModelAccessKey) GetValidEndTime() int64 {
	if x != nil {
		return x.ValidEndTime
	}
	return 0
}

func (x *ModelAccessKey) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ModelAccessKey) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// @ref: ModelAccessKey
type AccessKeyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime int64  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	IsDisabled bool   `protobuf:"varint,4,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
	DeletedAt  int64  `protobuf:"varint,5,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	// @index
	UserId *dt.ID `protobuf:"bytes,6,opt,name=userId,proto3" json:"userId,omitempty"`
	// @index
	AccessKey      string `protobuf:"bytes,7,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	HasValidity    bool   `protobuf:"varint,8,opt,name=hasValidity,proto3" json:"hasValidity,omitempty"`
	ValidStartTime int64  `protobuf:"varint,9,opt,name=validStartTime,proto3" json:"validStartTime,omitempty"`
	ValidEndTime   int64  `protobuf:"varint,10,opt,name=validEndTime,proto3" json:"validEndTime,omitempty"`
	Remark         string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AccessKeyItem) Reset() {
	*x = AccessKeyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessKeyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKeyItem) ProtoMessage() {}

func (x *AccessKeyItem) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKeyItem.ProtoReflect.Descriptor instead.
func (*AccessKeyItem) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{64}
}

func (x *AccessKeyItem) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AccessKeyItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AccessKeyItem) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *AccessKeyItem) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

func (x *AccessKeyItem) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *AccessKeyItem) GetUserId() *dt.ID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *AccessKeyItem) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *AccessKeyItem) GetHasValidity() bool {
	if x != nil {
		return x.HasValidity
	}
	return false
}

func (x *AccessKeyItem) GetValidStartTime() int64 {
	if x != nil {
		return x.ValidStartTime
	}
	return 0
}

func (x *AccessKeyItem) GetValidEndTime() int64 {
	if x != nil {
		return x.ValidEndTime
	}
	return 0
}

func (x *AccessKeyItem) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AccessKeyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchKey string `protobuf:"bytes,1,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	// @v: required
	Pagination *dt.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	IsDisabled *dt.NullBool   `protobuf:"bytes,3,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *AccessKeyListRequest) Reset() {
	*x = AccessKeyListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessKeyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKeyListRequest) ProtoMessage() {}

func (x *AccessKeyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKeyListRequest.ProtoReflect.Descriptor instead.
func (*AccessKeyListRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{65}
}

func (x *AccessKeyListRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *AccessKeyListRequest) GetPagination() *dt.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *AccessKeyListRequest) GetIsDisabled() *dt.NullBool {
	if x != nil {
		return x.IsDisabled
	}
	return nil
}

type AccessKeyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *dt.PaginationResp `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	List       []*AccessKeyItem   `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AccessKeyListResponse) Reset() {
	*x = AccessKeyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessKeyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKeyListResponse) ProtoMessage() {}

func (x *AccessKeyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKeyListResponse.ProtoReflect.Descriptor instead.
func (*AccessKeyListResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{66}
}

func (x *AccessKeyListResponse) GetPagination() *dt.PaginationResp {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *AccessKeyListResponse) GetList() []*AccessKeyItem {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateAccessKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @v: required
	Remark         string `protobuf:"bytes,1,opt,name=remark,proto3" json:"remark,omitempty"`
	HasValidity    bool   `protobuf:"varint,2,opt,name=hasValidity,proto3" json:"hasValidity,omitempty"`
	ValidStartTime int64  `protobuf:"varint,3,opt,name=validStartTime,proto3" json:"validStartTime,omitempty"`
	ValidEndTime   int64  `protobuf:"varint,4,opt,name=validEndTime,proto3" json:"validEndTime,omitempty"`
}

func (x *CreateAccessKeyRequest) Reset() {
	*x = CreateAccessKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccessKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessKeyRequest) ProtoMessage() {}

func (x *CreateAccessKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateAccessKeyRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{67}
}

func (x *CreateAccessKeyRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateAccessKeyRequest) GetHasValidity() bool {
	if x != nil {
		return x.HasValidity
	}
	return false
}

func (x *CreateAccessKeyRequest) GetValidStartTime() int64 {
	if x != nil {
		return x.ValidStartTime
	}
	return 0
}

func (x *CreateAccessKeyRequest) GetValidEndTime() int64 {
	if x != nil {
		return x.ValidEndTime
	}
	return 0
}

type CreateAccessKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKey string `protobuf:"bytes,1,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	Remark    string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	Secret    string `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *CreateAccessKeyResponse) Reset() {
	*x = CreateAccessKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccessKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessKeyResponse) ProtoMessage() {}

func (x *CreateAccessKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateAccessKeyResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{68}
}

func (x *CreateAccessKeyResponse) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *CreateAccessKeyResponse) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateAccessKeyResponse) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type UpdateStatusAccessKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsDisabled bool   `protobuf:"varint,2,opt,name=isDisabled,proto3" json:"isDisabled,omitempty"`
}

func (x *UpdateStatusAccessKeyRequest) Reset() {
	*x = UpdateStatusAccessKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusAccessKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusAccessKeyRequest) ProtoMessage() {}

func (x *UpdateStatusAccessKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusAccessKeyRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusAccessKeyRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{69}
}

func (x *UpdateStatusAccessKeyRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateStatusAccessKeyRequest) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

type UpdateStatusAccessKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStatusAccessKeyResponse) Reset() {
	*x = UpdateStatusAccessKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusAccessKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusAccessKeyResponse) ProtoMessage() {}

func (x *UpdateStatusAccessKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusAccessKeyResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatusAccessKeyResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{70}
}

type DeleteAccessKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAccessKeyRequest) Reset() {
	*x = DeleteAccessKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccessKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccessKeyRequest) ProtoMessage() {}

func (x *DeleteAccessKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccessKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccessKeyRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{71}
}

func (x *DeleteAccessKeyRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteAccessKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAccessKeyResponse) Reset() {
	*x = DeleteAccessKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccessKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccessKeyResponse) ProtoMessage() {}

func (x *DeleteAccessKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccessKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccessKeyResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{72}
}

type SetAccessKeyRemarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @v: required
	Id *dt.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @v: length.min=1
	// @msg: invalid remark {{.Remark}}
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SetAccessKeyRemarkRequest) Reset() {
	*x = SetAccessKeyRemarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccessKeyRemarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccessKeyRemarkRequest) ProtoMessage() {}

func (x *SetAccessKeyRemarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccessKeyRemarkRequest.ProtoReflect.Descriptor instead.
func (*SetAccessKeyRemarkRequest) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{73}
}

func (x *SetAccessKeyRemarkRequest) GetId() *dt.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SetAccessKeyRemarkRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type SetAccessKeyRemarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAccessKeyRemarkResponse) Reset() {
	*x = SetAccessKeyRemarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cos_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccessKeyRemarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccessKeyRemarkResponse) ProtoMessage() {}

func (x *SetAccessKeyRemarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cos_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccessKeyRemarkResponse.ProtoReflect.Descriptor instead.
func (*SetAccessKeyRemarkResponse) Descriptor() ([]byte, []int) {
	return file_cos_proto_rawDescGZIP(), []int{74}
}

var File_cos_proto protoreflect.FileDescriptor

var file_cos_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x63, 0x6f, 0x73,
	0x1a, 0x1a, 0x64, 0x74, 0x2f, 0x6a, 0x75, 0x78, 0x75, 0x6e, 0x79, 0x5f, 0x79, 0x63, 0x5f, 0x64,
	0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a,
	0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x7a, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x51, 0x0a,
	0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x31, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f,
	0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x69, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x47, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64,
	0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b,
	0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd2, 0x02, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x32, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x24, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x22, 0xea, 0x01, 0x0a, 0x0e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x24, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x0d, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0xaa, 0x03, 0x0a, 0x0b, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x62, 0x61, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52,
	0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x71, 0x4e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x71, 0x4e, 0x6f, 0x12, 0x3d, 0x0a, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6e,
	0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x69,
	0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc2, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71,
	0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x71, 0x4e, 0x6f, 0x12,
	0x35, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x84, 0x02, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x62, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x22, 0x89, 0x03, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74,
	0x2e, 0x49, 0x44, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71,
	0x4e, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x71, 0x4e, 0x6f, 0x22,
	0xf2, 0x02, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64,
	0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x73, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74,
	0x2e, 0x49, 0x44, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x48, 0x6f, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x17, 0x53, 0x61, 0x76, 0x65, 0x4f, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x12, 0x32, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x22, 0x50, 0x0a, 0x18, 0x53, 0x61, 0x76, 0x65,
	0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x22, 0xee, 0x01, 0x0a, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x0f,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a,
	0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x74, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x6d, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x14, 0x53, 0x61,
	0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64,
	0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x64, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64,
	0x74, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x77, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x64, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x53, 0x61, 0x76,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74,
	0x2e, 0x49, 0x44, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x06,
	0x62, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64,
	0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x62, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12,
	0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x0b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x74,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x8c, 0x02, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x62, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x0b, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x71, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x64, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc0,
	0x01, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x2c, 0x0a,
	0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4a, 0x04, 0x08, 0x06, 0x10,
	0x07, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x64, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a,
	0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x74, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x6e, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x1b, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x74, 0x2e,
	0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x74, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x6f, 0x6f,
	0x6c, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x3d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0x1a, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22,
	0x1f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x53, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x0f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x74, 0x2e,
	0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x3a, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x39, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x82, 0x03, 0x0a, 0x0e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x22, 0xe9, 0x02, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x92, 0x01, 0x0a,
	0x14, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x74, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x74, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0x73, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x64, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x68, 0x61, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x22, 0x56, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x64,
	0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x64, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2a, 0x3d, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x02,
	0x2a, 0x3e, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x01,
	0x2a, 0xb9, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x04,
	0x12, 0x1a, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x10, 0x05, 0x2a, 0x71, 0x0a, 0x09,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x36, 0x34, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x32,
	0x8f, 0x11, 0x0a, 0x03, 0x43, 0x6f, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x12, 0x12, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x11, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x63,
	0x6f, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x4f,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x63, 0x6f,
	0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x73, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63,
	0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x73,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x2e, 0x63,
	0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x2e, 0x63, 0x6f,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6f,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x19, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x73,
	0x2e, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x60, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x6f,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x11, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x73, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16,
	0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x17, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x73, 0x2e,
	0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x2e, 0x63, 0x6f,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6f,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x2e, 0x63, 0x6f,
	0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x6f,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x3c, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x2e, 0x63,
	0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x0c, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x2e,
	0x63, 0x6f, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x63, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x63, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_cos_proto_rawDescOnce sync.Once
	file_cos_proto_rawDescData = file_cos_proto_rawDesc
)

func file_cos_proto_rawDescGZIP() []byte {
	file_cos_proto_rawDescOnce.Do(func() {
		file_cos_proto_rawDescData = protoimpl.X.CompressGZIP(file_cos_proto_rawDescData)
	})
	return file_cos_proto_rawDescData
}

var file_cos_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_cos_proto_msgTypes = make([]protoimpl.MessageInfo, 75)
var file_cos_proto_goTypes = []interface{}{
	(ModifyPasswordType)(0),               // 0: cos.ModifyPasswordType
	(AccountType)(0),                      // 1: cos.AccountType
	(ConfigRecordType)(0),                 // 2: cos.ConfigRecordType
	(ValueType)(0),                        // 3: cos.ValueType
	(*HealthRequest)(nil),                 // 4: cos.HealthRequest
	(*HealthResponse)(nil),                // 5: cos.HealthResponse
	(*LoginRequest)(nil),                  // 6: cos.LoginRequest
	(*LoginResponse)(nil),                 // 7: cos.LoginResponse
	(*UserInfoRequest)(nil),               // 8: cos.UserInfoRequest
	(*UserInfoSimple)(nil),                // 9: cos.UserInfoSimple
	(*UserInfoResponse)(nil),              // 10: cos.UserInfoResponse
	(*UpdateInfoRequest)(nil),             // 11: cos.UpdateInfoRequest
	(*UpdateInfoResponse)(nil),            // 12: cos.UpdateInfoResponse
	(*ModifyPasswordRequest)(nil),         // 13: cos.ModifyPasswordRequest
	(*ModifyPasswordResponse)(nil),        // 14: cos.ModifyPasswordResponse
	(*ModelAccount)(nil),                  // 15: cos.ModelAccount
	(*ModelNamespace)(nil),                // 16: cos.ModelNamespace
	(*NamespaceResp)(nil),                 // 17: cos.NamespaceResp
	(*ModelConfig)(nil),                   // 18: cos.ModelConfig
	(*ModelConfigRecord)(nil),             // 19: cos.ModelConfigRecord
	(*ConfigResp)(nil),                    // 20: cos.ConfigResp
	(*ModelKeyValue)(nil),                 // 21: cos.ModelKeyValue
	(*KeyValueResp)(nil),                  // 22: cos.KeyValueResp
	(*SaveOrCreateUserRequest)(nil),       // 23: cos.SaveOrCreateUserRequest
	(*SaveOrCreateUserResponse)(nil),      // 24: cos.SaveOrCreateUserResponse
	(*UserListItem)(nil),                  // 25: cos.UserListItem
	(*UserListRequest)(nil),               // 26: cos.UserListRequest
	(*UserListResponse)(nil),              // 27: cos.UserListResponse
	(*SaveNamespaceRequest)(nil),          // 28: cos.SaveNamespaceRequest
	(*SaveNamespaceResponse)(nil),         // 29: cos.SaveNamespaceResponse
	(*ListNamespaceRequest)(nil),          // 30: cos.ListNamespaceRequest
	(*ListNamespaceItem)(nil),             // 31: cos.ListNamespaceItem
	(*ListNamespaceResponse)(nil),         // 32: cos.ListNamespaceResponse
	(*DeleteNamespaceRequest)(nil),        // 33: cos.DeleteNamespaceRequest
	(*DeleteNamespaceResponse)(nil),       // 34: cos.DeleteNamespaceResponse
	(*SaveConfigRequest)(nil),             // 35: cos.SaveConfigRequest
	(*SaveConfigResponse)(nil),            // 36: cos.SaveConfigResponse
	(*DeleteConfigRequest)(nil),           // 37: cos.DeleteConfigRequest
	(*DeleteConfigResponse)(nil),          // 38: cos.DeleteConfigResponse
	(*ListConfigRequest)(nil),             // 39: cos.ListConfigRequest
	(*ListConfigItem)(nil),                // 40: cos.ListConfigItem
	(*ListConfigResponse)(nil),            // 41: cos.ListConfigResponse
	(*CloneConfigRequest)(nil),            // 42: cos.CloneConfigRequest
	(*CloneConfigResponse)(nil),           // 43: cos.CloneConfigResponse
	(*SaveValueRequest)(nil),              // 44: cos.SaveValueRequest
	(*SaveValueResponse)(nil),             // 45: cos.SaveValueResponse
	(*ListValueRequest)(nil),              // 46: cos.ListValueRequest
	(*ListValueResponse)(nil),             // 47: cos.ListValueResponse
	(*DeleteValueRequest)(nil),            // 48: cos.DeleteValueRequest
	(*DeleteValueResponse)(nil),           // 49: cos.DeleteValueResponse
	(*DisableValueRequest)(nil),           // 50: cos.DisableValueRequest
	(*DisableValueResponse)(nil),          // 51: cos.DisableValueResponse
	(*UpdateStatusValueRequest)(nil),      // 52: cos.UpdateStatusValueRequest
	(*UpdateStatusValueResponse)(nil),     // 53: cos.UpdateStatusValueResponse
	(*ListAllValueRequest)(nil),           // 54: cos.ListAllValueRequest
	(*ListAllValueResponse)(nil),          // 55: cos.ListAllValueResponse
	(*UserUpdateStatusRequest)(nil),       // 56: cos.UserUpdateStatusRequest
	(*UserUpdateStatusResponse)(nil),      // 57: cos.UserUpdateStatusResponse
	(*UserDeleteRequest)(nil),             // 58: cos.UserDeleteRequest
	(*UserDeleteResponse)(nil),            // 59: cos.UserDeleteResponse
	(*UpdateStatusNamespaceRequest)(nil),  // 60: cos.UpdateStatusNamespaceRequest
	(*UpdateStatusNamespaceResponse)(nil), // 61: cos.UpdateStatusNamespaceResponse
	(*UpdateStatusConfigRequest)(nil),     // 62: cos.UpdateStatusConfigRequest
	(*UpdateStatusConfigResponse)(nil),    // 63: cos.UpdateStatusConfigResponse
	(*SelectorRequest)(nil),               // 64: cos.SelectorRequest
	(*SelectorItem)(nil),                  // 65: cos.SelectorItem
	(*SelectorResponse)(nil),              // 66: cos.SelectorResponse
	(*ModelAccessKey)(nil),                // 67: cos.ModelAccessKey
	(*AccessKeyItem)(nil),                 // 68: cos.AccessKeyItem
	(*AccessKeyListRequest)(nil),          // 69: cos.AccessKeyListRequest
	(*AccessKeyListResponse)(nil),         // 70: cos.AccessKeyListResponse
	(*CreateAccessKeyRequest)(nil),        // 71: cos.CreateAccessKeyRequest
	(*CreateAccessKeyResponse)(nil),       // 72: cos.CreateAccessKeyResponse
	(*UpdateStatusAccessKeyRequest)(nil),  // 73: cos.UpdateStatusAccessKeyRequest
	(*UpdateStatusAccessKeyResponse)(nil), // 74: cos.UpdateStatusAccessKeyResponse
	(*DeleteAccessKeyRequest)(nil),        // 75: cos.DeleteAccessKeyRequest
	(*DeleteAccessKeyResponse)(nil),       // 76: cos.DeleteAccessKeyResponse
	(*SetAccessKeyRemarkRequest)(nil),     // 77: cos.SetAccessKeyRemarkRequest
	(*SetAccessKeyRemarkResponse)(nil),    // 78: cos.SetAccessKeyRemarkResponse
	(*dt.ID)(nil),                         // 79: dt.ID
	(*dt.Pagination)(nil),                 // 80: dt.Pagination
	(*dt.NullBool)(nil),                   // 81: dt.NullBool
	(*dt.PaginationResp)(nil),             // 82: dt.PaginationResp
}
var file_cos_proto_depIdxs = []int32{
	1,   // 0: cos.LoginRequest.accountType:type_name -> cos.AccountType
	79,  // 1: cos.UserInfoRequest.userId:type_name -> dt.ID
	79,  // 2: cos.UserInfoSimple.userId:type_name -> dt.ID
	1,   // 3: cos.UserInfoSimple.accountType:type_name -> cos.AccountType
	79,  // 4: cos.UserInfoResponse.userId:type_name -> dt.ID
	1,   // 5: cos.UserInfoResponse.accountType:type_name -> cos.AccountType
	79,  // 6: cos.UpdateInfoRequest.userId:type_name -> dt.ID
	79,  // 7: cos.ModifyPasswordRequest.userId:type_name -> dt.ID
	79,  // 8: cos.ModelAccount.id:type_name -> dt.ID
	1,   // 9: cos.ModelAccount.accountType:type_name -> cos.AccountType
	79,  // 10: cos.ModelAccount.creatorId:type_name -> dt.ID
	79,  // 11: cos.ModelNamespace.id:type_name -> dt.ID
	79,  // 12: cos.ModelNamespace.creatorId:type_name -> dt.ID
	79,  // 13: cos.NamespaceResp.id:type_name -> dt.ID
	79,  // 14: cos.NamespaceResp.creatorId:type_name -> dt.ID
	79,  // 15: cos.ModelConfig.id:type_name -> dt.ID
	79,  // 16: cos.ModelConfig.creatorId:type_name -> dt.ID
	79,  // 17: cos.ModelConfig.baseId:type_name -> dt.ID
	79,  // 18: cos.ModelConfig.namespaceId:type_name -> dt.ID
	2,   // 19: cos.ModelConfig.lastRecordType:type_name -> cos.ConfigRecordType
	79,  // 20: cos.ModelConfigRecord.id:type_name -> dt.ID
	79,  // 21: cos.ModelConfigRecord.configId:type_name -> dt.ID
	2,   // 22: cos.ModelConfigRecord.recordType:type_name -> cos.ConfigRecordType
	79,  // 23: cos.ConfigResp.id:type_name -> dt.ID
	79,  // 24: cos.ConfigResp.creatorId:type_name -> dt.ID
	79,  // 25: cos.ConfigResp.baseId:type_name -> dt.ID
	79,  // 26: cos.ModelKeyValue.id:type_name -> dt.ID
	3,   // 27: cos.ModelKeyValue.valueType:type_name -> cos.ValueType
	79,  // 28: cos.ModelKeyValue.configId:type_name -> dt.ID
	79,  // 29: cos.ModelKeyValue.creatorId:type_name -> dt.ID
	79,  // 30: cos.KeyValueResp.id:type_name -> dt.ID
	3,   // 31: cos.KeyValueResp.valueType:type_name -> cos.ValueType
	79,  // 32: cos.KeyValueResp.configId:type_name -> dt.ID
	79,  // 33: cos.KeyValueResp.creatorId:type_name -> dt.ID
	1,   // 34: cos.SaveOrCreateUserRequest.accountType:type_name -> cos.AccountType
	79,  // 35: cos.SaveOrCreateUserRequest.userId:type_name -> dt.ID
	79,  // 36: cos.SaveOrCreateUserResponse.userId:type_name -> dt.ID
	79,  // 37: cos.UserListItem.id:type_name -> dt.ID
	1,   // 38: cos.UserListItem.accountType:type_name -> cos.AccountType
	80,  // 39: cos.UserListRequest.pagination:type_name -> dt.Pagination
	81,  // 40: cos.UserListRequest.isDisabled:type_name -> dt.NullBool
	82,  // 41: cos.UserListResponse.pagination:type_name -> dt.PaginationResp
	25,  // 42: cos.UserListResponse.list:type_name -> cos.UserListItem
	79,  // 43: cos.SaveNamespaceRequest.id:type_name -> dt.ID
	80,  // 44: cos.ListNamespaceRequest.pagination:type_name -> dt.Pagination
	81,  // 45: cos.ListNamespaceRequest.isDisabled:type_name -> dt.NullBool
	79,  // 46: cos.ListNamespaceItem.id:type_name -> dt.ID
	82,  // 47: cos.ListNamespaceResponse.pagination:type_name -> dt.PaginationResp
	31,  // 48: cos.ListNamespaceResponse.list:type_name -> cos.ListNamespaceItem
	79,  // 49: cos.DeleteNamespaceRequest.id:type_name -> dt.ID
	79,  // 50: cos.SaveConfigRequest.id:type_name -> dt.ID
	79,  // 51: cos.SaveConfigRequest.namespaceId:type_name -> dt.ID
	79,  // 52: cos.SaveConfigRequest.baseId:type_name -> dt.ID
	79,  // 53: cos.DeleteConfigRequest.id:type_name -> dt.ID
	80,  // 54: cos.ListConfigRequest.pagination:type_name -> dt.Pagination
	79,  // 55: cos.ListConfigRequest.namespaceId:type_name -> dt.ID
	81,  // 56: cos.ListConfigRequest.isDisabled:type_name -> dt.NullBool
	79,  // 57: cos.ListConfigItem.id:type_name -> dt.ID
	79,  // 58: cos.ListConfigItem.baseId:type_name -> dt.ID
	79,  // 59: cos.ListConfigItem.namespaceId:type_name -> dt.ID
	82,  // 60: cos.ListConfigResponse.pagination:type_name -> dt.PaginationResp
	40,  // 61: cos.ListConfigResponse.list:type_name -> cos.ListConfigItem
	79,  // 62: cos.CloneConfigRequest.id:type_name -> dt.ID
	79,  // 63: cos.SaveValueRequest.configId:type_name -> dt.ID
	3,   // 64: cos.SaveValueRequest.valueType:type_name -> cos.ValueType
	80,  // 65: cos.ListValueRequest.pagination:type_name -> dt.Pagination
	79,  // 66: cos.ListValueRequest.configId:type_name -> dt.ID
	81,  // 67: cos.ListValueRequest.isDisabled:type_name -> dt.NullBool
	82,  // 68: cos.ListValueResponse.pagination:type_name -> dt.PaginationResp
	22,  // 69: cos.ListValueResponse.list:type_name -> cos.KeyValueResp
	79,  // 70: cos.DeleteValueRequest.id:type_name -> dt.ID
	79,  // 71: cos.DisableValueRequest.id:type_name -> dt.ID
	79,  // 72: cos.UpdateStatusValueRequest.id:type_name -> dt.ID
	79,  // 73: cos.ListAllValueRequest.configId:type_name -> dt.ID
	81,  // 74: cos.ListAllValueRequest.isDisabled:type_name -> dt.NullBool
	81,  // 75: cos.ListAllValueRequest.isHot:type_name -> dt.NullBool
	22,  // 76: cos.ListAllValueResponse.list:type_name -> cos.KeyValueResp
	79,  // 77: cos.UserUpdateStatusRequest.userId:type_name -> dt.ID
	79,  // 78: cos.UserDeleteRequest.userId:type_name -> dt.ID
	79,  // 79: cos.UpdateStatusNamespaceRequest.id:type_name -> dt.ID
	79,  // 80: cos.UpdateStatusConfigRequest.id:type_name -> dt.ID
	81,  // 81: cos.SelectorRequest.isDisabled:type_name -> dt.NullBool
	65,  // 82: cos.SelectorResponse.list:type_name -> cos.SelectorItem
	79,  // 83: cos.ModelAccessKey.id:type_name -> dt.ID
	79,  // 84: cos.ModelAccessKey.userId:type_name -> dt.ID
	79,  // 85: cos.AccessKeyItem.id:type_name -> dt.ID
	79,  // 86: cos.AccessKeyItem.userId:type_name -> dt.ID
	80,  // 87: cos.AccessKeyListRequest.pagination:type_name -> dt.Pagination
	81,  // 88: cos.AccessKeyListRequest.isDisabled:type_name -> dt.NullBool
	82,  // 89: cos.AccessKeyListResponse.pagination:type_name -> dt.PaginationResp
	68,  // 90: cos.AccessKeyListResponse.list:type_name -> cos.AccessKeyItem
	79,  // 91: cos.UpdateStatusAccessKeyRequest.id:type_name -> dt.ID
	79,  // 92: cos.DeleteAccessKeyRequest.id:type_name -> dt.ID
	79,  // 93: cos.SetAccessKeyRemarkRequest.id:type_name -> dt.ID
	4,   // 94: cos.Cos.Health:input_type -> cos.HealthRequest
	6,   // 95: cos.Cos.Login:input_type -> cos.LoginRequest
	8,   // 96: cos.Cos.UserInfo:input_type -> cos.UserInfoRequest
	11,  // 97: cos.Cos.UpdateInfo:input_type -> cos.UpdateInfoRequest
	13,  // 98: cos.Cos.ModifyPassword:input_type -> cos.ModifyPasswordRequest
	23,  // 99: cos.Cos.SaveOrCreateUser:input_type -> cos.SaveOrCreateUserRequest
	26,  // 100: cos.Cos.UserList:input_type -> cos.UserListRequest
	56,  // 101: cos.Cos.UserUpdateStatus:input_type -> cos.UserUpdateStatusRequest
	58,  // 102: cos.Cos.UserDelete:input_type -> cos.UserDeleteRequest
	69,  // 103: cos.Cos.AccessKeyList:input_type -> cos.AccessKeyListRequest
	71,  // 104: cos.Cos.CreateAccessKey:input_type -> cos.CreateAccessKeyRequest
	73,  // 105: cos.Cos.UpdateStatusAccessKey:input_type -> cos.UpdateStatusAccessKeyRequest
	75,  // 106: cos.Cos.DeleteAccessKey:input_type -> cos.DeleteAccessKeyRequest
	77,  // 107: cos.Cos.SetRemarkAccessKey:input_type -> cos.SetAccessKeyRemarkRequest
	28,  // 108: cos.Cos.SaveNamespace:input_type -> cos.SaveNamespaceRequest
	30,  // 109: cos.Cos.ListNamespace:input_type -> cos.ListNamespaceRequest
	33,  // 110: cos.Cos.DeleteNamespace:input_type -> cos.DeleteNamespaceRequest
	60,  // 111: cos.Cos.UpdateStatusNamespace:input_type -> cos.UpdateStatusNamespaceRequest
	64,  // 112: cos.Cos.SelectorNamespace:input_type -> cos.SelectorRequest
	35,  // 113: cos.Cos.SaveConfig:input_type -> cos.SaveConfigRequest
	37,  // 114: cos.Cos.DeleteConfig:input_type -> cos.DeleteConfigRequest
	39,  // 115: cos.Cos.ListConfig:input_type -> cos.ListConfigRequest
	42,  // 116: cos.Cos.CloneConfig:input_type -> cos.CloneConfigRequest
	62,  // 117: cos.Cos.UpdateStatusConfig:input_type -> cos.UpdateStatusConfigRequest
	44,  // 118: cos.Cos.SaveValue:input_type -> cos.SaveValueRequest
	48,  // 119: cos.Cos.DeleteValue:input_type -> cos.DeleteValueRequest
	46,  // 120: cos.Cos.ListValue:input_type -> cos.ListValueRequest
	50,  // 121: cos.Cos.DisableValue:input_type -> cos.DisableValueRequest
	54,  // 122: cos.Cos.ListAllValue:input_type -> cos.ListAllValueRequest
	52,  // 123: cos.Cos.UpdateStatusValue:input_type -> cos.UpdateStatusValueRequest
	5,   // 124: cos.Cos.Health:output_type -> cos.HealthResponse
	7,   // 125: cos.Cos.Login:output_type -> cos.LoginResponse
	10,  // 126: cos.Cos.UserInfo:output_type -> cos.UserInfoResponse
	12,  // 127: cos.Cos.UpdateInfo:output_type -> cos.UpdateInfoResponse
	14,  // 128: cos.Cos.ModifyPassword:output_type -> cos.ModifyPasswordResponse
	24,  // 129: cos.Cos.SaveOrCreateUser:output_type -> cos.SaveOrCreateUserResponse
	27,  // 130: cos.Cos.UserList:output_type -> cos.UserListResponse
	57,  // 131: cos.Cos.UserUpdateStatus:output_type -> cos.UserUpdateStatusResponse
	59,  // 132: cos.Cos.UserDelete:output_type -> cos.UserDeleteResponse
	70,  // 133: cos.Cos.AccessKeyList:output_type -> cos.AccessKeyListResponse
	72,  // 134: cos.Cos.CreateAccessKey:output_type -> cos.CreateAccessKeyResponse
	74,  // 135: cos.Cos.UpdateStatusAccessKey:output_type -> cos.UpdateStatusAccessKeyResponse
	76,  // 136: cos.Cos.DeleteAccessKey:output_type -> cos.DeleteAccessKeyResponse
	78,  // 137: cos.Cos.SetRemarkAccessKey:output_type -> cos.SetAccessKeyRemarkResponse
	29,  // 138: cos.Cos.SaveNamespace:output_type -> cos.SaveNamespaceResponse
	32,  // 139: cos.Cos.ListNamespace:output_type -> cos.ListNamespaceResponse
	34,  // 140: cos.Cos.DeleteNamespace:output_type -> cos.DeleteNamespaceResponse
	61,  // 141: cos.Cos.UpdateStatusNamespace:output_type -> cos.UpdateStatusNamespaceResponse
	66,  // 142: cos.Cos.SelectorNamespace:output_type -> cos.SelectorResponse
	36,  // 143: cos.Cos.SaveConfig:output_type -> cos.SaveConfigResponse
	38,  // 144: cos.Cos.DeleteConfig:output_type -> cos.DeleteConfigResponse
	41,  // 145: cos.Cos.ListConfig:output_type -> cos.ListConfigResponse
	43,  // 146: cos.Cos.CloneConfig:output_type -> cos.CloneConfigResponse
	63,  // 147: cos.Cos.UpdateStatusConfig:output_type -> cos.UpdateStatusConfigResponse
	45,  // 148: cos.Cos.SaveValue:output_type -> cos.SaveValueResponse
	48,  // 149: cos.Cos.DeleteValue:output_type -> cos.DeleteValueRequest
	47,  // 150: cos.Cos.ListValue:output_type -> cos.ListValueResponse
	51,  // 151: cos.Cos.DisableValue:output_type -> cos.DisableValueResponse
	55,  // 152: cos.Cos.ListAllValue:output_type -> cos.ListAllValueResponse
	53,  // 153: cos.Cos.UpdateStatusValue:output_type -> cos.UpdateStatusValueResponse
	124, // [124:154] is the sub-list for method output_type
	94,  // [94:124] is the sub-list for method input_type
	94,  // [94:94] is the sub-list for extension type_name
	94,  // [94:94] is the sub-list for extension extendee
	0,   // [0:94] is the sub-list for field type_name
}

func init() { file_cos_proto_init() }
func file_cos_proto_init() {
	if File_cos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoSimple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelNamespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelConfigRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelKeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValueResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveOrCreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveOrCreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectorItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelAccessKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessKeyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessKeyListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessKeyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccessKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccessKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusAccessKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusAccessKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccessKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccessKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccessKeyRemarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cos_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccessKeyRemarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cos_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   75,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cos_proto_goTypes,
		DependencyIndexes: file_cos_proto_depIdxs,
		EnumInfos:         file_cos_proto_enumTypes,
		MessageInfos:      file_cos_proto_msgTypes,
	}.Build()
	File_cos_proto = out.File
	file_cos_proto_rawDesc = nil
	file_cos_proto_goTypes = nil
	file_cos_proto_depIdxs = nil
}

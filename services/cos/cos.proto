syntax = "proto3";

package cos;
option go_package = "./;cos";

import "dt/juxuny_yc_dt_base.proto";

// @level: 1
// @version: 1.0.0
service Cos {
  // @group: devops
  // @ignore-auth
  // @desc: health check
  rpc Health(HealthRequest) returns (HealthResponse) {}

  // @group: auth
  // @ignore-auth
  rpc Login(LoginRequest) returns (LoginResponse) {}

  // @group: user
  rpc UserInfo(UserInfoRequest) returns (UserInfoResponse) {}
  // @group: user
  rpc UpdateInfo(UpdateInfoRequest) returns(UpdateInfoResponse) {}
  // @group: user
  rpc ModifyPassword(ModifyPasswordRequest) returns (ModifyPasswordResponse) {}
  // @group: user
  rpc SaveOrCreateUser(SaveOrCreateUserRequest) returns (SaveOrCreateUserResponse) {}
  // @group: user
  rpc UserList(UserListRequest) returns (UserListResponse) {}
  // @group: user
  rpc UserUpdateStatus(UserUpdateStatusRequest) returns (UserUpdateStatusResponse) {}
  // @group: user
  rpc UserDelete(UserDeleteRequest) returns (UserDeleteResponse) {}
  // @group: user
  rpc AccessKeyList(AccessKeyListRequest) returns (AccessKeyListResponse) {}
  // @group: user
  rpc CreateAccessKey(CreateAccessKeyRequest) returns (CreateAccessKeyResponse) {}
  // @group: user
  rpc UpdateStatusAccessKey(UpdateStatusAccessKeyRequest) returns (UpdateStatusAccessKeyResponse) {}
  // @group: user
  rpc DeleteAccessKey(DeleteAccessKeyRequest) returns (DeleteAccessKeyResponse) {}
  // @group: user
  rpc SetRemarkAccessKey(SetAccessKeyRemarkRequest) returns (SetAccessKeyRemarkResponse) {}

  // @group: namespace
  rpc SaveNamespace(SaveNamespaceRequest) returns (SaveNamespaceResponse) {}
  // @group: namespace
  rpc ListNamespace(ListNamespaceRequest) returns(ListNamespaceResponse) {}
  // @group: namespace
  rpc DeleteNamespace(DeleteNamespaceRequest) returns(DeleteNamespaceResponse) {}
  // @group: namespace
  rpc UpdateStatusNamespace(UpdateStatusNamespaceRequest) returns (UpdateStatusNamespaceResponse) {}
  // @group: namespace
  rpc SelectorNamespace(SelectorRequest) returns (SelectorResponse) {}

  // @group: config
  rpc SaveConfig(SaveConfigRequest) returns (SaveConfigResponse) {}
  // @group: config
  rpc DeleteConfig(DeleteConfigRequest) returns (DeleteConfigResponse) {}
  // @group: config
  rpc ListConfig(ListConfigRequest) returns (ListConfigResponse) {}
  // @group: config
  rpc CloneConfig(CloneConfigRequest) returns (CloneConfigResponse) {}
  // @group: config
  rpc UpdateStatusConfig(UpdateStatusConfigRequest) returns (UpdateStatusConfigResponse) {}

  // @group: key_value
  rpc SaveValue(SaveValueRequest) returns (SaveValueResponse) {}
  // @group: key_value
  rpc DeleteValue(DeleteValueRequest) returns (DeleteValueRequest) {}
  // @group: key_value
  rpc ListValue(ListValueRequest) returns (ListValueResponse) {}
  // @group: key_value
  rpc DisableValue(DisableValueRequest) returns(DisableValueResponse) {}
  // @group: key_value
  rpc ListAllValue(ListAllValueRequest) returns (ListAllValueResponse) {}
  // @group: key_value
  rpc UpdateStatusValue(UpdateStatusValueRequest) returns(UpdateStatusValueResponse) {}
  // @group: key_value
  // @internal
  // @check-sign
  rpc ListAllValueByConfigId(ListAllValueByConfigIdRequest) returns (ListAllValueByConfigIdResponse) {}
}

message HealthRequest {}

message HealthResponse {
  string currentTime = 1;
}

// @desc: 登录请求
message LoginRequest {
  // @desc: 用户名
  string userName = 1;
  // @desc: 登录密码
  string password = 2;
  // @v: in= 1
  // @msg: 无效登录类型: {{.AccountType|num}}
  AccountType accountType = 3;
}

message LoginResponse {
  uint64  userId = 1;
  string name = 2;
  string token = 3;
}

message UserInfoRequest {
  dt.ID userId = 1;
}

message UserInfoSimple {
  dt.ID userId = 1;
  string name = 2;
  string userName = 3;
  AccountType accountType = 4;
}

// @ref: ModelAccount
message UserInfoResponse {
  dt.ID userId = 1;
  string nick = 2;
  string identifier = 3;
  AccountType accountType = 4;
}


message UpdateInfoRequest {
  dt.ID userId = 1;
  // @v: length.min=1
  // @msg: missing nick name
  string nick = 2;
}

message UpdateInfoResponse {}

enum ModifyPasswordType {
  Unknown = 0;
  // 通过旧密码修改
  OldPassword = 1;
  // 通过临时token修改
  Token = 2;
}

message ModifyPasswordRequest {
  dt.ID userId = 1;
  reserved 2;
  // @v: length.min=6
  // @v: length.max=22
  // @v: password=up|low|num
  // @msg: invalid old password: {{.OldPassword}}
  string oldPassword = 3;
  // @v: length.min=6
  // @v: length.max=22
  // @v: password=up|low|num
  // @msg: invalid new password: {{.NewPassword}}
  string newPassword = 4;
}

message ModifyPasswordResponse {}

// @desc: 账号类型
enum AccountType {
  // @desc: 未知
  AccountTypeUnknown = 0;
  // @desc: 密码登录的账号
  AccountTypePassword = 1;
}

message ModelAccount {
  // @index
  dt.ID id = 1;
  // @index
  string identifier = 2;
  string credential = 3;
  // @index
  AccountType accountType = 4;
  int64 createTime = 5;
  int64 updateTime = 6;
  int64 deletedAt = 7;
  bool isDisabled = 8;
  // @index
  dt.ID creatorId = 9;
  string nick = 10;
}

message ModelNamespace {
  // @index
  dt.ID id = 1;
  // @index
  string namespace = 2;
  int64 createTime = 3;
  int64 updateTime = 4;
  int64 deletedAt = 5;
  bool isDisabled = 6;
  // @index
  dt.ID creatorId = 7;
}

// @ref: ModelNamespace
message NamespaceResp {
  dt.ID id = 1;
  string namespace = 2;
  int64 createTime = 3;
  int64 updateTime = 4;
  reserved 5;
  bool isDisabled = 6;
  dt.ID creatorId = 7;
}

message ModelConfig {
  // @index
  dt.ID id = 1;
  int64 createTime = 2;
  int64 updateTime = 3;
  int64 deletedAt = 4;
  // @index
  string configId = 5;
  bool isDisabled = 6;
  // @index
  dt.ID creatorId = 7;
  // @index
  dt.ID baseId = 8;
  // @index
  dt.ID namespaceId = 9;
  uint64 lastSeqNo = 10;
  ConfigRecordType lastRecordType = 11;
  uint64 linkCount = 12;
}

enum ConfigRecordType {
  ConfigRecordTypeUnknown = 0;
  ConfigRecordTypeCreate = 1;
  ConfigRecordTypeModify = 2;
  ConfigRecordTypeDelete = 3;
  ConfigRecordTypeLink = 4;
  ConfigRecordTypeUnlink = 5;
}

message ModelConfigRecord {
  // @index
  dt.ID id = 1;
  // @index
  dt.ID configId = 2;
  int64 createTime = 3;
  reserved 4;
  uint64 seqNo = 5;
  // @index
  // @orm: type
  ConfigRecordType recordType = 6;
}

message ConfigResp {
  dt.ID id = 1;
  int64 createTime = 2;
  int64 updateTime = 3;
  int64 deletedAt = 4;
  string configId = 5;
  bool isDisabled = 6;
  dt.ID creatorId = 7;
  dt.ID baseId = 8;
}

enum ValueType {
  ValueTypeUnknown = 0;
  ValueTypeInt = 1;
  ValueTypeFloat64 = 2;
  ValueTypeBool = 3;
  ValueTypeString = 4;
}

message ModelKeyValue {
  // @index
  dt.ID id = 1;
  int64 createTime = 2;
  int64 updateTime = 3;
  int64 deletedAt = 4;
  bool isDisabled = 5;
  // @index
  string configKey = 6;
  string configValue = 7;
  ValueType valueType = 8;
  // @index
  dt.ID configId = 9;
  // @index
  dt.ID creatorId = 10;
  // @index
  bool isHot = 11;
  // @index
  uint64 seqNo = 12;
}

// @ref: ModelKeyValue
message KeyValueResp {
  dt.ID id = 1;
  int64 createTime = 2;
  int64 updateTime = 3;
  int64 deletedAt = 4;
  bool isDisabled = 5;
  string configKey = 6;
  string configValue = 7;
  ValueType valueType = 8;
  dt.ID configId = 9;
  dt.ID creatorId = 10;
  bool isHot = 11;
}

message SaveOrCreateUserRequest {
  string identifier = 1;
  string credential = 2;
  // @v: in=1
  // @msg: invalid accountType: {{.AccountType|num}}
  AccountType accountType = 3;
  dt.ID userId = 4;
  // @v: length.min=1
  // @v: length.max=16
  string nick = 5;
}

message SaveOrCreateUserResponse {
  dt.ID userId = 1;
  bool isNew = 2;
}

// @ref: ModelAccount
message UserListItem {
  dt.ID id = 1;
  string identifier = 2;
  AccountType accountType = 3;
  string nick = 4;
  int64 createTime = 5;
  int64 updateTime = 6;
  bool isDisabled = 7;
}

message UserListRequest {
  // @v: required
  dt.Pagination pagination = 1;
  string searchKey = 2;
  dt.NullBool isDisabled = 3;
}

message UserListResponse {
  dt.PaginationResp pagination = 1;
  repeated UserListItem list = 2;
}

message SaveNamespaceRequest {
  // @v: length.min=3
  // @msg: invalid namespace: {{.Namespace}}
  string namespace = 1;
  dt.ID id = 2;
}

message SaveNamespaceResponse {}

message ListNamespaceRequest {
  dt.Pagination pagination = 1;
  string searchKey = 2;
  dt.NullBool isDisabled = 3;
}

// @ref: ModelNamespace
message ListNamespaceItem {
  dt.ID id = 1;
  string namespace = 2;
  int64 createTime = 3;
  int64 updateTime = 4;
  bool isDisabled = 5;
}

message ListNamespaceResponse {
  dt.PaginationResp pagination = 1;
  repeated ListNamespaceItem list = 2;
}

message DeleteNamespaceRequest {
  // @v: min=1
  // @msg: invalid id
  dt.ID id = 1;
}

message DeleteNamespaceResponse {}

message SaveConfigRequest {
  dt.ID id = 1;
  dt.ID namespaceId = 2;
  // @v: required
  string configId = 3;
  dt.ID baseId = 4;
}
message SaveConfigResponse {}

message DeleteConfigRequest {
  dt.ID id = 1;
}

message DeleteConfigResponse {}

message ListConfigRequest {
  dt.Pagination pagination = 1;
  // @v: required
  dt.ID namespaceId = 2;
  string searchKey = 3;
  dt.NullBool isDisabled = 4;
}

// @ref: ModelConfig
message ListConfigItem {
  dt.ID id = 1;
  int64 createTime = 2;
  int64 updateTime = 3;
  dt.ID baseId = 4;
  dt.ID namespaceId = 5;
  string configId = 6;
  uint64 linkCount = 7;
  bool isDisabled = 8;
}

message ListConfigResponse {
  dt.PaginationResp pagination = 1;
  repeated ListConfigItem list = 2;
}

message CloneConfigRequest {
  // @v: required
  dt.ID id = 1;
  // @v: length.min=1
  // @msg: invalid configId: {{.NewConfigId}}
  string newConfigId = 2;
}

message CloneConfigResponse {}

message SaveValueRequest {
  dt.ID configId = 1;
  // @v: required
  string configKey = 2;
  // @v: required
  string configValue = 3;
  bool isHot = 4;
  ValueType valueType = 5;
  reserved 6;
}

message SaveValueResponse {}

message ListValueRequest {
  dt.Pagination pagination = 1;
  dt.ID configId = 2;
  string searchKey = 3;
  dt.NullBool isDisabled = 4;
}

message ListValueResponse {
  dt.PaginationResp pagination = 1;
  repeated KeyValueResp list = 2;
}

message DeleteValueRequest {
  dt.ID id = 1;
  // @v: length.min=1
  // @msg: missing config key name
  string key = 2;
}

message DeleteValueResponse {}

message DisableValueRequest {
  dt.ID id = 1;
  bool isDisabled = 2;
}

message DisableValueResponse {}

message UpdateStatusValueRequest {
  // @v: required
  dt.ID id = 1;
  bool isDisabled = 2;
}

message UpdateStatusValueResponse {}

message ListAllValueRequest {
  dt.ID configId = 1;
  dt.NullBool isDisabled = 2;
  dt.NullBool isHot = 3;
  string searchKey = 4;
}

message ListAllValueResponse {
  repeated KeyValueResp list = 1;
}

message UserUpdateStatusRequest {
  // @v: required
  dt.ID userId = 1;
  bool isDisabled = 2;
}

message UserUpdateStatusResponse {}

message UserDeleteRequest {
  // @v: required
  dt.ID userId = 1;
}

message UserDeleteResponse {}


message UpdateStatusNamespaceRequest {
  // @v: required
  dt.ID id = 1;
  bool isDisabled = 2;
}

message UpdateStatusNamespaceResponse {}

message UpdateStatusConfigRequest {
  // @v: required
  dt.ID id = 1;
  bool isDisabled = 2;
}

message UpdateStatusConfigResponse {}

message SelectorRequest {
  dt.NullBool isDisabled = 1;
}

message SelectorItem {
  string label = 1;
  string value = 2;
}

message SelectorResponse {
  repeated SelectorItem list = 1;
}

message ModelAccessKey {
  // @index
  dt.ID id = 1;
  int64 createTime = 2;
  int64 updateTime = 3;
  bool isDisabled = 4;
  int64 deletedAt = 5;

  // @index
  dt.ID userId = 6;
  // @index
  string accessKey = 7;
  bool hasValidity = 8;
  int64 validStartTime = 9;
  int64 validEndTime = 10;
  string remark = 11;
  string secret = 12;
}

// @ref: ModelAccessKey
message AccessKeyItem {
  dt.ID id = 1;
  int64 createTime = 2;
  int64 updateTime = 3;
  bool isDisabled = 4;
  int64 deletedAt = 5;

  // @index
  dt.ID userId = 6;
  // @index
  string accessKey = 7;
  bool hasValidity = 8;
  int64 validStartTime = 9;
  int64 validEndTime = 10;
  string remark = 11;
}

message AccessKeyListRequest {
  string searchKey = 1;
  // @v: required
  dt.Pagination pagination = 2;
  dt.NullBool isDisabled = 3;
}

message AccessKeyListResponse {
  dt.PaginationResp pagination = 1;
  repeated AccessKeyItem list = 2;
}

message CreateAccessKeyRequest {
  // @v: required
  string remark = 1;
  bool hasValidity = 2;
  int64 validStartTime = 3;
  int64 validEndTime = 4;
}

message CreateAccessKeyResponse {
  string accessKey = 1;
  string remark = 2;
  string secret = 3;
}

message UpdateStatusAccessKeyRequest {
  dt.ID id = 1;
  bool isDisabled = 2;
}

message UpdateStatusAccessKeyResponse {}

message DeleteAccessKeyRequest {
  dt.ID id = 1;
}

message DeleteAccessKeyResponse {}

message SetAccessKeyRemarkRequest {
  // @v: required
  dt.ID id = 1;
  // @v: length.min=1
  // @msg: invalid remark {{.Remark}}
  string remark = 2;
}

message SetAccessKeyRemarkResponse {}

message ListAllValueByConfigIdRequest {
  // @v: required
  string configId = 1;
  dt.NullBool isDisabled = 2;
  string searchKey = 3;
  dt.NullBool isHot = 4;
}

message ListAllValueByConfigIdResponse {
  repeated KeyValueResp list = 1;
}
